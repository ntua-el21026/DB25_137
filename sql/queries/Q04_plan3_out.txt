
## PLAN 3 — RESULT ##
artist_id  artist_name       avg_interpretation  avg_overall
---------  ----------------  ------------------  -----------
7          Artist6 Lastname  3.0139              3.0028

## PLAN 3 — EXPLAIN ##
id  select_type  table  partitions  type  possible_keys  key   key_len  ref   rows  filtered  Extra                                     
--  -----------  -----  ----------  ----  -------------  ----  -------  ----  ----  --------  ------------------------------------------
1   SIMPLE       r      NULL        ALL   NULL           NULL  NULL     NULL  9604  100.0     Using temporary
1   SIMPLE       pa     NULL        ALL   NULL           NULL  NULL     NULL  426   0.23      Using where; Using join buffer (hash join)
1   SIMPLE       a      NULL        ALL   NULL           NULL  NULL     NULL  55    9.09      Using where; Using join buffer (hash join)

## PLAN 3 — EXPLAIN ANALYZE HASH ##
EXPLAIN
-------
-> Table scan on <temporary>  (actual time=7.19..7.19 rows=1 loops=1)
    -> Aggregate using temporary table  (actual time=7.19..7.19 rows=1 loops=1)
        -> Inner hash join (no condition)  (cost=1998 rows=10.2) (actual time=6.68..6.77 rows=360 loops=1)
            -> Filter: (a.artist_id = 7)  (cost=879e-6 rows=5) (actual time=0.0119..0.0759 rows=1 loops=1)
                -> Table scan on a  (cost=879e-6 rows=55) (actual time=0.00995..0.0611 rows=55 loops=1)
            -> Hash
                -> Inner hash join (pa.perf_id = r.perf_id)  (cost=1978 rows=22.5) (actual time=6.53..6.61 rows=360 loops=1)
                    -> Filter: (pa.artist_id = 7)  (cost=0.00531 rows=1) (actual time=0.146..0.205 rows=13 loops=1)
                        -> Table scan on pa  (cost=0.00531 rows=426) (actual time=0.131..0.176 rows=426 loops=1)
                    -> Hash
                        -> Table scan on r  (cost=967 rows=9604) (actual time=0.361..4.57 rows=9733 loops=1)


## PLAN 3 — EXPLAIN ANALYZE NESTED LOOP ##
EXPLAIN
-------
-> Table scan on <temporary>  (actual time=1956..1956 rows=1 loops=1)
    -> Aggregate using temporary table  (actual time=1956..1956 rows=1 loops=1)
        -> Nested loop inner join  (cost=913856 rows=48020) (actual time=275..1955 rows=360 loops=1)
            -> Nested loop inner join  (cost=810613 rows=9604) (actual time=275..1942 rows=360 loops=1)
                -> Table scan on r  (cost=967 rows=9604) (actual time=0.39..5.85 rows=9733 loops=1)
                -> Filter: ((pa.perf_id = r.perf_id) and (pa.artist_id = 7))  (cost=41.7 rows=1) (actual time=0.197..0.199 rows=0.037 loops=9733)
                    -> Table scan on pa  (cost=41.7 rows=426) (actual time=0.0981..0.164 rows=426 loops=9733)
            -> Filter: (a.artist_id = 7)  (cost=5.25 rows=5) (actual time=0.00557..0.0349 rows=1 loops=360)
                -> Table scan on a  (cost=5.25 rows=55) (actual time=0.00399..0.0311 rows=55 loops=360)

